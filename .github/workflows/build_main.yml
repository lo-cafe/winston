name: Build winston
permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main
      - beta
      - alpha
      - versioning # When TESTING always push to this branch in FORK!! test
  workflow_dispatch:

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: /home/runner/work/winston/semantic-swiftjs/package-lock.json
      - run: npm ci
      - run: npm run pipeline

      - name: Commit and tag
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Bumping version

  sync-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Merge main -> beta
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: main
          target_branch: beta
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge beta -> alpha
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: beta
          target_branch: alpha
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: macos-13

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Xcode
        if: env.ACT != 'true' ##Check if its ran locally with act (act -P macos-13=-self-hosted -W build_main.yml)
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.0"

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build Xcode archive
        env:
          TEAM_ID: ${{ secrets.DEVELOPMENT_TEAM_ID }}
        run: |
          xcodebuild \
            -scheme "winston" \
            -archivePath $RUNNER_TEMP/winston.xcarchive \
            -sdk iphoneos \
            -destination platform=iOS \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM=$TEAM_ID \
            clean archive

      - name: Export ipa
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/winston.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $RUNNER_TEMP/build

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/mything
          asset_name: mything
          tag: ${{ github.ref }}
          overwrite: true
          body: "This is my release text"

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
